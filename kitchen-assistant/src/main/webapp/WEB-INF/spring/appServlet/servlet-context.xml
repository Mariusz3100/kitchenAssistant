<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	
	<context:component-scan base-package="mariusz.ambroziak.kassistant" />
	
	
     
     
   
     
     <tx:annotation-driven />
    
	<bean id="userDao" class="mariusz.ambroziak.kassistant.dao.UserDAOImpl">
	    <constructor-arg>
	        <ref bean="sessionFactory" />
	    </constructor-arg>
	</bean>    	
	
	<bean id="produktDao" class="mariusz.ambroziak.kassistant.dao.ProduktDAOImpl">
	    <constructor-arg>
	        <ref bean="sessionFactory" />
	    </constructor-arg>
	</bean>    	
	
	
	<bean id="daoProvider" class="mariusz.ambroziak.kassistant.dao.DaoProvider">
	    <constructor-arg>
	        <ref bean="userDao" />
	    </constructor-arg>
	    
	    	    <constructor-arg>
	        <ref bean="produktDao" />
	    </constructor-arg>
	</bean>    	
	
</beans>
